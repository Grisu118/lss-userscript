name: CI

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'

      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World

      # Run all projects on main branch, affected only on PRs/branches
      - name: Run lint and build
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            npx nx run-many -t lint build
          else
            npx nx affected -t lint build
          fi

      # Save the build outputs for later jobs
      # This saves the entire repo, which includes the built files in "apps" folders
      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: apps/*/dist/*user.js

  # New job to handle release artifacts
  release:
    needs: main
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Restore the build outputs from the previous job
      - name: Restore build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./dist

      # Creating draft release
      - name: Create Draft Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          prerelease: false
          body: |
            An update for the different scripts.
          files: ./dist/**